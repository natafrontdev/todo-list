{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onSearchChange","e","target","value","setState","type","placeholder","onChange","React","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filterMark","onFilterChange","btnClass","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","index","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","search","items","length","filter","toLowerCase","indexOf","filters","arr","propName","oldItem","objectSpread","defineProperty","_this$state","visibleItem","doneCount","todoCount","components_app_header","components_search_panel","item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.f5fc7afe.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({ toDo, done }) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            term: ''\n        }\n\n        this.onSearchChange = (e) => {\n            const term = e.target.value\n            this.setState({ term });\n            this.props.onSearchChange(term);\n        };\n    }\n\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\"\n                value={this.state.term}\n                onChange={this.onSearchChange} />\n        )\n    }\n}\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends React.Component {\n\n    render() {\n        const {\n            label,\n            onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important,\n            done\n        } = this.props;\n\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done'\n        }\n\n        if (important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames}>\n                <span\n                    className=\"todo-list-item-label\"\n                    onClick={onToggleDone}>\n                    {label}\n                </span>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success btn-sm float-right\"\n                    onClick={onToggleImportant}>\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={onDeleted}>\n                    <i className=\"fa fa-trash-o\" />\n                </button>\n            </span>\n        )\n    }\n};\n","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n    const elements = todos.map((item) => {\n        const {id, ...itemProps} = item;\n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    { ...itemProps }\n                    onDeleted={() =>  onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}/>\n            </li>\n        )\n    })\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    )\n}\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React from 'react';\n\nexport default class ItemStatusFilter extends React.Component {\n    constructor() {\n        super();\n        this.buttons = [\n            {\n                name: 'all',\n                label: 'All'\n            },\n            {\n                name: 'active',\n                label: 'Active'\n            },\n            {\n                name: 'done',\n                label: 'Done'\n            },\n        ];\n    }\n\n    render() {\n        const { filterMark, onFilterChange } = this.props\n\n        const buttons = this.buttons.map(({ name, label }) => {\n            const isActive = filterMark === name;\n            const btnClass = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button\n                    key={name}\n                    type=\"button\"\n                    className={`btn ${btnClass}`}\n                    onClick={() => onFilterChange(name)}>\n                    {label}\n                </button>\n            )\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n};\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;\n","import React, { Component } from 'react';\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            label: ''\n        }\n\n        this.onLabelChange = (e) => {\n            this.setState({\n                label: e.target.value\n            })\n        };\n\n        this.onSubmit = (e) => {\n            e.preventDefault();\n            this.props.onItemAdded(this.state.label)\n            this.setState({\n                label: ''\n            })\n        }\n    }\n\n    render() {\n        return (\n            <form\n                className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"What needs to be done\"\n                    value={this.state.label}\n                    onChange={this.onLabelChange}/>\n                <button className=\"btn btn-outline-secondary\">\n                    Add Item\n                </button>\n            </form>\n        )\n    }\n}\n","import App from './app';\n\nexport default App;\n","import React from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n\n    constructor() {\n        super();\n\n        this.maxId = 100;\n\n        this.state = {\n            todoData: [\n                this.createTodoItem('Drink Coffee'),\n                this.createTodoItem('Make Awesome App'),\n                this.createTodoItem('Have a lunch'),\n            ],\n            term: '',\n            filterMark: 'all' // active, all, done\n        }\n\n        this.deleteItem = (id) => {\n            this.setState(({ todoData }) => {\n                const index = todoData.findIndex((el) => el.id === id)\n\n                const newData = [\n                    ...todoData.slice(0, index),\n                    ...todoData.slice(index + 1)\n                ]\n\n                return {\n                    todoData: newData\n                }\n            })\n        }\n\n        this.addItem = (text) => {\n            // generate id\n            const newItem = this.createTodoItem(text);\n\n            // add element in array\n            this.setState(({ todoData }) => {\n\n                const newData = [\n                    ...todoData,\n                    newItem\n                ]\n\n                return {\n                    todoData: newData\n                }\n            })\n        }\n\n        this.onToggleImportant = (id) => {\n            this.setState(({ todoData }) => {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'important')\n                }\n            })\n        }\n\n        this.onToggleDone = (id) => {\n            this.setState(({ todoData }) => {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'done')\n                }\n            })\n        }\n\n        this.onFilterChange = (filterMark) => {\n            this.setState({ filterMark })\n        }\n\n        this.onSearchChange = (term) => {\n            this.setState({ term })\n        }\n\n        this.search = (items, term) => {\n            if (term.length === 0) {\n                return items\n            }\n            return items.filter((item) => {\n                return item.label\n                .toLowerCase()\n                .indexOf(term.toLowerCase()) > -1\n            })\n        }\n\n        this.filters = (items, filterMark) => {\n            switch(filterMark) {\n                case 'all':\n                    return items;\n                case 'active':\n                    return items.filter((item) => !item.done);\n                case 'done':\n                    return items.filter((item) => item.done);\n                default:\n                    return items;\n            }\n        }\n    }\n\n    toggleProperty(arr, id, propName) {\n        const index = arr.findIndex((el) => el.id === id);\n\n        // update need object\n        const oldItem = arr[index];\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName]\n        }\n\n        // construct new Data\n        return [\n            ...arr.slice(0, index),\n            newItem,\n            ...arr.slice(index + 1)\n        ];\n    }\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++,\n        }\n    }\n\n    render() {\n        const { todoData, term, filterMark } = this.state;\n\n        const visibleItem = this.filters(\n            this.search(todoData, term), filterMark\n        );\n\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount} />\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange} />\n                    <ItemStatusFilter\n                        filterMark={filterMark}\n                        onFilterChange={this.onFilterChange} />\n                </div>\n\n                <TodoList\n                    todos={visibleItem}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone} />\n\n                <ItemAddForm onItemAdded={this.addItem} />\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}